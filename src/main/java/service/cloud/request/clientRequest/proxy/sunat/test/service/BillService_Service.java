package service.cloud.request.clientRequest.proxy.sunat.test.service;

import org.apache.log4j.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.0.5
 * 2015-07-31T07:15:07.914+02:00
 * Generated source version: 3.0.5
 */
@WebServiceClient(name = "billService", targetNamespace = "http://service.gem.factura.comppago.registro.servicio.sunat.gob.pe/", wsdlLocation = "https://www.sunat.gob.pe/ol-ti-itcpgem-beta/billService?wsdl")
public class BillService_Service extends Service {

    private static final Logger logger = Logger.getLogger(BillService_Service.class);

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.gem.factura.comppago.registro.servicio.sunat.gob.pe/", "billService");

    public final static QName BillServicePort = new QName("http://service.gem.factura.comppago.registro.servicio.sunat.gob.pe/", "BillServicePort");


    /**
     * Instances default URL for WS.
     */
    static {
        URL url = null;
        try {
            URL baseURL = BillService_Service.class.getResource(".");
            url = new URL(baseURL, "https://e-beta.sunat.gob.pe/ol-ti-itcpfegem-beta/billService?wsdl");
        } catch (MalformedURLException e) {
            logger.error("static() Can not initialize the default wsdl from 'https://www.sunat.gob.pe/ol-ti-itcpgem-beta/billService?wsdl'");
            logger.error("static() MalformedURLException -->" + e.getMessage());
        }
        WSDL_LOCATION = url;
    } //static

    /**
     * Basic constructor for BillService_Service class.
     */
    public BillService_Service() {
        super(WSDL_LOCATION, SERVICE);
        if (logger.isDebugEnabled()) {
            logger.debug("+-BillService_Service() URL Test-WS: " + WSDL_LOCATION);
        }
    } //BillService_Service

    /**
     * Constructor for BillService_Service class.
     *
     * @param wsdlLocation WSDL location input.
     */
    public BillService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
        if (logger.isDebugEnabled()) {
            logger.debug("+-BillService_Service(URL) URL Test-WS: " + wsdlLocation);
        }
    } //BillService_Service

    /**
     * Constructor for BillService_Service class.
     *
     * @param wsdlLocation WSDL location input.
     * @param serviceName  Service name input.
     */
    public BillService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
        if (logger.isDebugEnabled()) {
            logger.debug("+-BillService_Service(URL, QName) URL Test-WS: " + wsdlLocation);
        }
    } //BillService_Service

    /**
     * Constructor for BillService_Service class.
     *
     * @param features Web service feature input.
     */
    public BillService_Service(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
        if (logger.isDebugEnabled()) {
            logger.debug("+-BillService_Service(WebServiceFeature...) URL Test-WS: " + WSDL_LOCATION);
        }
    } //BillService_Service

    /**
     * Constructor for BillService_Service class.
     *
     * @param wsdlLocation WSDL location input.
     * @param features     Web service feature input.
     */
    public BillService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
        if (logger.isDebugEnabled()) {
            logger.debug("+-BillService_Service(URL, WebServiceFeature...) URL Test-WS: " + wsdlLocation);
        }
    } //BillService_Service

    /**
     * Constructor for BillService_Service class.
     *
     * @param wsdlLocation WSDL location input.
     * @param serviceName  Service name input.
     * @param features     Web service feature input.
     */
    public BillService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
        if (logger.isDebugEnabled()) {
            logger.debug("+-BillService_Service(URL, QName, WebServiceFeature...) URL Test-WS: " + wsdlLocation);
        }
    } //BillService_Service


    /**
     * This method gets the bill service port.
     *
     * @return Returns the bill service port.
     */
    @WebEndpoint(name = "BillServicePort")
    public BillService getBillServicePort() {
        return super.getPort(BillServicePort, BillService.class);
    } //getBillServicePort

    /**
     * This method gets the bill service port.
     *
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.
     *                 Supported features not in the <code>features</code> parameter will have
     *                 their default values.
     * @return Returns the bill service port.
     */
    @WebEndpoint(name = "BillServicePort")
    public BillService getBillServicePort(WebServiceFeature... features) {
        return super.getPort(BillServicePort, BillService.class, features);
    } //getBillServicePort

} //BillService_Service
